<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.marcusprado02</groupId>
	<artifactId>sharedkernel</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>sharedkernel</name>
	<packaging>pom</packaging>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>21</java.version>
	</properties>
	<!-- BOM das instrumentations (recomendado) -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.opentelemetry.instrumentation</groupId>
				<artifactId>opentelemetry-instrumentation-bom</artifactId>
				<version>2.8.0</version> <!-- ou a mais recente que você usa -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.opentelemetry</groupId>
				<artifactId>opentelemetry-bom</artifactId>
				<version>1.43.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.opentelemetry.instrumentation</groupId>
				<artifactId>opentelemetry-instrumentation-bom</artifactId>
				<version>2.8.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>2.25.60</version> <!-- ou a mais recente -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2025.0.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			 
			<!-- gRPC bom já está OK (1.66.0) -->
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-bom</artifactId>
				<version>1.75.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Protobuf: alinhar com o protoc 29.3 => runtime 4.29.x -->
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-bom</artifactId>
				<version>4.29.3</version>
				<type>pom</type>
				<scope>import</scope>
    	</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-graphql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.graphql</groupId>
			<artifactId>spring-graphql-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.java-json-tools</groupId>
			<artifactId>json-patch</artifactId>
			<version>1.13</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty-shaded</artifactId>
			<version>1.75.0</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-protobuf</artifactId>
			<version>1.75.0</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-stub</artifactId>
			<version>1.75.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
			<version>1.43.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<version>4.11.1</version> <!-- use a versão mais recente compatível -->
		</dependency>
		<dependency>
			<groupId>org.opensearch.client</groupId>
			<artifactId>opensearch-java</artifactId>
			<version>2.15.0</version> <!-- verifique a versão mais recente -->
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version> <!-- use a versão mais recente -->
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>3.7.0</version> <!-- ou compatível com o cluster/alvo -->
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty</artifactId>
			<version>1.66.0</version> <!-- alinhe com a versão do grpc-stub/protobuf -->
		</dependency>
		<!-- API do OTel (você já usa OpenTelemetry aqui) -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
			<version>1.43.0</version>
		</dependency>

		<!-- Instrumentação gRPC (fornece GrpcTelemetry) -->
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-grpc-1.6</artifactId>
			<version>2.16.0-alpha</version>
		</dependency>
		<!-- já que estamos usando Netty não-shaded -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty</artifactId>
			<version>1.75.0</version>
		</dependency>

		<!-- HealthStatusManager e ProtoReflectionService -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-services</artifactId>
			<version>1.75.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.netty</groupId>
			<artifactId>reactor-netty-http</artifactId>
		</dependency>
		<!-- API + SDKs -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk-metrics</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk-logs</artifactId>
		</dependency>

		<!-- Exporters LOGGING (stdout/console) -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-logging</artifactId>
		</dependency>

		<!-- Exporters OTLP gRPC (traces/metrics/logs) -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.contrib</groupId>
			<artifactId>opentelemetry-aws-xray-propagator</artifactId>
			<version>1.44.0-alpha</version> <!-- alinhe se já tiver outro BOM/versão -->
		</dependency>

		<!-- Micrometer Prometheus (já usado no arquivo) -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.23.1</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-client</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.elasticsearch.client/elasticsearch-rest-high-level-client -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>7.17.29</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jakarta.mail/jakarta.mail-api -->
		<dependency>
			<groupId>jakarta.mail</groupId>
			<artifactId>jakarta.mail-api</artifactId>
			<version>2.1.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.github.openfeign/feign-core -->
		<dependency>
			<groupId>io.github.openfeign</groupId>
			<artifactId>feign-core</artifactId>
			<version>13.6</version>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>s3</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-retry</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-circuitbreaker</artifactId>
			<version>2.2.0</version>
		</dependency>
		<!-- Micrometer Prometheus (PrometheusMeterRegistry / PrometheusConfig) -->
		<dependency>
		<groupId>io.micrometer</groupId>
		<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- OTel SDK base -->
		<dependency>
		<groupId>io.opentelemetry</groupId>
		<artifactId>opentelemetry-sdk</artifactId>
		</dependency>

		<!-- OTel SDK - metrics/logs export -->
		<dependency>
		<groupId>io.opentelemetry</groupId>
		<artifactId>opentelemetry-sdk-metrics</artifactId>
		</dependency>
		<dependency>
		<groupId>io.opentelemetry</groupId>
		<artifactId>opentelemetry-sdk-logs</artifactId>
		</dependency>

		<!-- OTLP exporters (trace/metrics/logs, gRPC + HTTP) -->
		<dependency>
		<groupId>io.opentelemetry</groupId>
		<artifactId>opentelemetry-exporter-otlp</artifactId>
		</dependency>

		<!-- Exporters de logging (stdout) para spans e logs -->
		<dependency>
		<groupId>io.opentelemetry</groupId>
		<artifactId>opentelemetry-exporter-logging</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.opentelemetry.instrumentation/opentelemetry-runtime-metrics -->
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-runtime-metrics</artifactId>
			<version>1.26.0-alpha</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Propagators extras (B3) -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-extension-trace-propagators</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/software.amazon.awssdk/secretsmanager -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>secretsmanager</artifactId>
			<version>2.34.3</version>
		</dependency>
		<dependency>
			<groupId>io.kubernetes</groupId>
			<artifactId>client-java</artifactId>
			<version>19.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j</artifactId>
			<version>7.3.2</version> <!-- alinhe com sua stack -->
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.github.jopenlibs/vault-java-driver -->
		<dependency>
			<groupId>io.github.jopenlibs</groupId>
			<artifactId>vault-java-driver</artifactId>
			<version>6.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.influxdb</groupId>
			<artifactId>influxdb-client-java</artifactId>
			<version>6.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>4.4.0</version>
		</dependency>
		<!-- Spring Data Redis (usa Lettuce por padrão) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.cloudevents/cloudevents-core -->
		<dependency>
			<groupId>io.cloudevents</groupId>
			<artifactId>cloudevents-core</artifactId>
			<version>4.0.1</version>
		</dependency>

		<!-- Suporte Jackson para (de)serializar CloudEvent em JSON -->
		<dependency>
			<groupId>io.cloudevents</groupId>
			<artifactId>cloudevents-json-jackson</artifactId>
			<version>4.0.1</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-reactor</artifactId>
			<version>2.2.0</version>
		</dependency>
		<!-- AspectJ (Spring AOP) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-driver</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-core</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>com.eventstore</groupId>
			<artifactId>db-client-java</artifactId>
			<version>5.3.0</version>
		</dependency>
		<!-- Spring AMQP (RabbitMQ) -->
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit</artifactId>
			<version>3.1.4</version>
		</dependency>

		<!-- Micrometer / OTel (você já usa) -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>1.13.2</version>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
			<version>3.1.8</version>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-ratelimiter</artifactId>
			<version>2.2.0</version>
		</dependency>
		<!-- JAX-RS API -->
		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- CDI (para @Inject) -->
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<version>4.0.1</version>
		</dependency>

		<!-- Annotations (@Priority etc) -->
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<version>2.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-bulkhead</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>3.2.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.vladimir-bukhtoyarov/bucket4j-core -->
		<dependency>
			<groupId>com.github.vladimir-bukhtoyarov</groupId>
			<artifactId>bucket4j-core</artifactId>
			<version>8.0.1</version>
		</dependency>
		  <!-- Redisson (cliente Redis) -->
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>3.26.0</version>
		</dependency>

		<!-- Resilience4j (já usado no projeto) -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-core</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- Reactor (se ainda não tiver) -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
			<version>3.6.9</version>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>cloudfront</artifactId>
		</dependency>
		<!-- http client mínimo -->
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>url-connection-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.luben</groupId>
			<artifactId>zstd-jni</artifactId>
			<version>1.5.6-9</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>
		<!-- (opcional) utilitários JSON do protobuf -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java-util</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Inclui os sources gerados -->
			<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>build-helper-maven-plugin</artifactId>
			<version>3.6.0</version>
			<executions>
				<execution>
				<id>add-source</id>
				<phase>generate-sources</phase>
				<goals>
					<goal>add-source</goal>
				</goals>
				<configuration>
					<sources>
					<source>build/generated-sources</source>
					</sources>
				</configuration>
				</execution>
			</executions>
			</plugin>
		</plugins>
	</build>

</project>
